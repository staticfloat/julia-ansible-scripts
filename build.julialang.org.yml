---
# Get PATH environment variable
- hosts: buildtest.e.ip.saba.us
  tasks:
    - command: echo "$PATH"
      register: default_path

#- hosts: build.julialang.org
- hosts: buildtest.e.ip.saba.us
  vars_files:
    - secret/vars.yml
  environment:
    PATH: "/home/ubuntu/local/bin:{{default_path.stdout}}"
  pre_tasks:
    # Save home directory to "home" variable
    - shell: echo ~
      register: home

    - name: Install packages
      apt: name={{item}} state=latest
      with_items:
        - git
        - python
        - python-virtualenv
        - python-dev
        - libsqlite3-dev
        - bzr
        - devscripts
        - libssl-dev
      become: yes

    - name: Update git repo
      git: repo=https://github.com/staticfloat/julia-buildbot.git update=yes dest="{{home.stdout}}/buildbot" accept_hostkey=yes version=level_up

    - name: Check if buildbot is already installed
      stat: path={{home.stdout}}/buildbot/sandbox/bin/buildbot
      register: buildbot

    - name: Stop buildbot if it's already running
      shell: chdir={{home.stdout}}/buildbot sandbox/bin/buildbot stop master
      when: buildbot.stat.exists == True
      ignore_errors: yes

    - name: Install virtualenv to ~/buildbot/sandbox
      shell: chdir={{home.stdout}}/buildbot virtualenv --no-site-packages sandbox

    - name: Install python packages to ~/buildbot/sandbox
      pip: name={{item}} virtualenv={{home.stdout}}/buildbot/sandbox state=latest
      with_items:
        - buildbot[tls]
        - buildbot-www
        - buildbot-waterfall-view
        - buildbot-console-view
        - urllib3[secure]
        - requests
        - ipython

    - name: Configure buildbot
      shell: chdir=~/buildbot sandbox/bin/buildbot create-master master

    - name: Copy buildbot_secret.py
      template: src=templates/buildbot_secret.py dest={{home.stdout}}/buildbot/master/buildbot_secret.py mode=0755

    - name: Create ~/.gnupg
      file: path=~/.gnupg state=directory

    - name: Copy gpg key
      copy: src=~/.gnupg/sabae.key dest={{home.stdout}}/.gnupg/sabae.key owner=ubuntu mode=0600
  roles:
    # Setup server stuff
    - role: server
      #server_hostname: buildbot
      server_hostname: buildtest

    - role: nginx
      become: yes
      # Install SSL certificates
      nginx_letsencrypt:
        - "{{inventory_hostname}}"
      nginx_sites:
        # Create HTTP -> HTTPS redirection metaserver
        build_ssl_redirect:
          - listen 80
          - server_name {{inventory_hostname}} *.{{inventory_hostname}}
          - return 301 https://$http_host$request_uri

        # Actual build.julialang.org website configuration
        buildtest.e.ip.saba.us:
          - listen 443 ssl
          - server_name {{inventory_hostname}} *.{{inventory_hostname}}

          # Send everything off to :8010, which is our buildbot server
          - location / {
              proxy_pass http://localhost:8010;
            }

          - location /sse {
              proxy_buffering off;
              proxy_pass http://localhost:8010/sse/;
            }

          - location /ws {
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              proxy_pass http://localhost:8010/ws;
              proxy_read_timeout 6000s;
            }

    - role: startup_script
      become: yes
      service_name: buildbot
      chdir: "{{home.stdout}}/buildbot/master"
      daemon_name: "{{home.stdout}}/buildbot/sandbox/bin/buildbot"
      daemon_opts: "start --nodaemon"
  tasks:
    # Copy over AWS credentials!
    - name: Copy over AWS credentials
      copy: dest="{{home.stdout}}/.awssecret" src=~/etc/secure/s3/julia-buildbot.s3key mode=0600

    # Install try_thrice
    - name: Install try_thrice
      copy: dest="{{home.stdout}}/bin" src=files/try_thrice mode=0755

    # Copy over julia RSA key
    - name: Copy ssh key
      copy: src=~/etc/secure/ssh/julia_buildbot_rsa dest={{home.stdout}}/.ssh/id_rsa owner=ubuntu mode=0600
      become: yes
